{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Year2\\\\WEB\\\\Temp\\\\abel-tasman-tours\\\\src\\\\components\\\\Cards\\\\TourCards.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Cards.css';\nimport CardItem from './CardItem'; //Creates data to enter into the datastore which contains three different pictures\n\nlet cardDataOne = [\n  /* {src:'images/img-3.jpg' ,\n  text:'Take the kayaks out into the open waters around Golden Bay' ,\n  label:'Price: $401' ,\n  path:'/tours' }, \n  \n  {src:'images/img-3.jpg' ,\n  text:'Take a tramp through the native bush' ,\n  label:'Price: $200' ,\n  path:'/tours'},\n   {src:'images/img-3.jpg' ,\n  text:'Get up close with the local wildlife' ,\n  label:'Price: $500' ,\n  path:'/tours'}  */\n]; //Creates data to enter into the datastore which contains three different pictures\n\nconst cardDataTwo = [{\n  src: 'images/img-3.jpg',\n  text: 'Outdoor three day camp',\n  label: 'Price: $600',\n  path: '/tours'\n}, {\n  src: 'images/img-3.jpg',\n  text: 'Take a tour around two unique bays',\n  label: 'Price: $100',\n  path: '/tours'\n}, {\n  src: 'images/img-3.jpg',\n  text: 'Explore the wonderful land marks around the area',\n  label: 'Price: $200',\n  path: '/tours'\n}]; //Creates data to enter into the datastore which contains three different pictures\n\nconst cardDataThree = [{\n  src: 'images/img-3.jpg',\n  text: 'Go inland through the bush and experience river crossing',\n  label: 'Price: $300',\n  path: '/tours'\n}, {\n  src: 'images/img-3.jpg',\n  text: 'Go for an adrenaline packed ride down a river in a raft ',\n  label: 'Price: $400',\n  path: '/tours'\n}, {\n  src: 'images/img-3.jpg',\n  text: 'Take a helicopter to a secluded beach',\n  label: 'Price: $700',\n  path: '/tours'\n}]; //Creates a list in which the data from the cardData gets passed into to display\n\n/* const listItemsOne = cardDataOne.map((data) => \n  <CardItem \n    src={data.src}\n    text={data.text} \n    label={data.label}\n    path={data.path}\n/>); */\n//Creates a list in which the data from the cardData gets passed into to display\n\nconst listItemsTwo = cardDataTwo.map(data => /*#__PURE__*/React.createElement(CardItem, {\n  src: data.src,\n  text: data.text,\n  label: data.label,\n  path: data.path,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 3\n  }\n})); //Creates a list in which the data from the cardData gets passed into to display\n\nconst listItemsThree = cardDataThree.map(data => /*#__PURE__*/React.createElement(CardItem, {\n  src: data.src,\n  text: data.text,\n  label: data.label,\n  path: data.path,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 3\n  }\n}));\n\nfunction TourCards() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false); //const [items, setItems] = useState([]);\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(\"/api\").then(res => res.json()).then(result => {\n      setIsLoaded(true); //setItems(result.items);\n\n      cardDataOne = result;\n      alert(\"Got data\" + result[0].label);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  alert(\"Before\");\n  const listItemsOne = cardDataOne.map(data => /*#__PURE__*/React.createElement(CardItem, {\n    src: data.src,\n    text: data.text,\n    label: data.label,\n    path: data.path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 3\n    }\n  }));\n  alert(\"After\");\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 12\n      }\n    }, \"Error: \", error.message);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {\n    return (\n      /*#__PURE__*/\n      //Creates the actual cards for display and wraps them to how I want them formatted\n      React.createElement(\"div\", {\n        className: \"cards\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }\n      }, \"Get lost in a world of wonder, with the amazing tours we offer\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cards__container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cards__wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"cards__items\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      }, listItemsOne), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"cards__items\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      }, listItemsTwo), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"cards__items\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }\n      }, listItemsThree))))\n    );\n  }\n}\n\nexport default TourCards;","map":{"version":3,"sources":["C:/Workspace/Year2/WEB/Temp/abel-tasman-tours/src/components/Cards/TourCards.js"],"names":["React","useState","useEffect","CardItem","cardDataOne","cardDataTwo","src","text","label","path","cardDataThree","listItemsTwo","map","data","listItemsThree","TourCards","error","setError","isLoaded","setIsLoaded","fetch","then","res","json","result","alert","listItemsOne","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Cards.css';\nimport CardItem from './CardItem';\n\n//Creates data to enter into the datastore which contains three different pictures\n\nlet cardDataOne = [\n  /* {src:'images/img-3.jpg' ,\n  text:'Take the kayaks out into the open waters around Golden Bay' ,\n  label:'Price: $401' ,\n  path:'/tours' }, \n  \n  {src:'images/img-3.jpg' ,\n  text:'Take a tramp through the native bush' ,\n  label:'Price: $200' ,\n  path:'/tours'},\n\n  {src:'images/img-3.jpg' ,\n  text:'Get up close with the local wildlife' ,\n  label:'Price: $500' ,\n  path:'/tours'}  */\n];\n\n//Creates data to enter into the datastore which contains three different pictures\nconst cardDataTwo = [\n  {src:'images/img-3.jpg' ,\n  text:'Outdoor three day camp' ,\n  label:'Price: $600' ,\n  path:'/tours'},\n    \n  {src:'images/img-3.jpg' ,\n  text:'Take a tour around two unique bays' ,\n  label:'Price: $100' ,\n  path:'/tours'},\n    \n  {src:'images/img-3.jpg' ,\n  text:'Explore the wonderful land marks around the area' ,\n  label:'Price: $200' ,\n  path:'/tours'}\n];\n\n//Creates data to enter into the datastore which contains three different pictures\nconst cardDataThree = [\n  {src:'images/img-3.jpg' ,\n  text:'Go inland through the bush and experience river crossing' ,\n  label:'Price: $300' ,\n  path:'/tours'},\n      \n  {src:'images/img-3.jpg' ,\n  text:'Go for an adrenaline packed ride down a river in a raft ' ,\n  label:'Price: $400' ,\n  path:'/tours'},\n      \n  {src:'images/img-3.jpg' ,\n  text:'Take a helicopter to a secluded beach' ,\n  label:'Price: $700' ,\n  path:'/tours'}\n];   \n\n//Creates a list in which the data from the cardData gets passed into to display\n/* const listItemsOne = cardDataOne.map((data) => \n  <CardItem \n    src={data.src}\n    text={data.text} \n    label={data.label}\n    path={data.path}\n/>); */\n\n//Creates a list in which the data from the cardData gets passed into to display\nconst listItemsTwo = cardDataTwo.map((data) => \n  <CardItem \n    src={data.src}\n    text={data.text} \n    label={data.label}\n    path={data.path}\n/>);\n\n//Creates a list in which the data from the cardData gets passed into to display\nconst listItemsThree = cardDataThree.map((data) => \n  <CardItem \n    src={data.src}\n    text={data.text} \n    label={data.label}\n    path={data.path}\n/>);\n\nfunction TourCards() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  //const [items, setItems] = useState([]);\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() => {\n    fetch(\"/api\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          //setItems(result.items);\n          cardDataOne = result;\n          alert(\"Got data\" + result[0].label);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }, [])\n\n  alert(\"Before\");\n  const listItemsOne = cardDataOne.map((data) => \n  <CardItem \n    src={data.src}\n    text={data.text} \n    label={data.label}\n    path={data.path}\n/>);\nalert(\"After\");\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n        //Creates the actual cards for display and wraps them to how I want them formatted\n      <div className='cards'>\n        <h1>Get lost in a world of wonder, with the amazing tours we offer</h1>\n        <div className='cards__container'>\n          <div className='cards__wrapper'>\n          <ul className='cards__items'>\n              {listItemsOne}\n            </ul>\n            <ul className='cards__items'>\n              {listItemsTwo}\n            </ul>\n            <ul className='cards__items'>\n              {listItemsThree}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TourCards;"]},"metadata":{},"sourceType":"module"}