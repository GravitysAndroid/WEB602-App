{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Year2\\\\WEB\\\\Temp\\\\abel-tasman-tours\\\\src\\\\components\\\\Button\\\\Button.js\";\nimport React from 'react';\nimport './Button.css';\nimport { Link } from 'react-router-dom';\n/*Sets up styles for easy deploy*/\n\nconst STYLES = ['btn--primary', 'btn--outline', 'btn--test'];\n/*Sets up sizes for easy deploy*/\n\nconst SIZES = ['btn--medium', 'btn--large'];\nexport const Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize\n}) => {\n  //If the button has a style, use buttonStyle, if not then use the first style in the STYLE array\n  const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0]; //If the button has a size, use buttonSize, if not then use the first size in the SIZE array \n\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n  return (\n    /*#__PURE__*/\n    //Here it will almost always return primary and medium unless it is overriden\n    React.createElement(Link, {\n      to: \"/login\",\n      className: \"btn-mobile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: `btn ${checkButtonStyle} ${checkButtonSize}`,\n      onClick: onClick,\n      type: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, children))\n  );\n};","map":{"version":3,"sources":["C:/Workspace/Year2/WEB/Temp/abel-tasman-tours/src/components/Button/Button.js"],"names":["React","Link","STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA;;AACA,MAAMC,MAAM,GAAG,CAAC,cAAD,EAAiB,cAAjB,EAAiC,WAAjC,CAAf;AACA;;AACA,MAAMC,KAAK,GAAG,CAAC,aAAD,EAAgB,YAAhB,CAAd;AAEA,OAAO,MAAMC,MAAM,GAAG,CAAC;AACrBC,EAAAA,QADqB;AAErBC,EAAAA,IAFqB;AAGrBC,EAAAA,OAHqB;AAIrBC,EAAAA,WAJqB;AAKrBC,EAAAA;AALqB,CAAD,KAMhB;AACF;AACF,QAAMC,gBAAgB,GAAGR,MAAM,CAACS,QAAP,CAAgBH,WAAhB,IACrBA,WADqB,GAErBN,MAAM,CAAC,CAAD,CAFV,CAFI,CAKN;;AACE,QAAMU,eAAe,GAAGT,KAAK,CAACQ,QAAN,CAAeF,UAAf,IAA6BA,UAA7B,GAA0CN,KAAK,CAAC,CAAD,CAAvE;AAEA;AAAA;AACI;AACF,wBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAkB,MAAA,SAAS,EAAC,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAG,OAAMO,gBAAiB,IAAGE,eAAgB,EADxD;AAEE,MAAA,OAAO,EAAEL,OAFX;AAGE,MAAA,IAAI,EAAED,IAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGD,QALH,CADF;AAFF;AAYD,CA1BM","sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/*Sets up styles for easy deploy*/\r\nconst STYLES = ['btn--primary', 'btn--outline', 'btn--test'];\r\n/*Sets up sizes for easy deploy*/\r\nconst SIZES = ['btn--medium', 'btn--large'];\r\n\r\nexport const Button = ({\r\n  children,\r\n  type,\r\n  onClick,\r\n  buttonStyle,\r\n  buttonSize\r\n}) => {\r\n    //If the button has a style, use buttonStyle, if not then use the first style in the STYLE array\r\n  const checkButtonStyle = STYLES.includes(buttonStyle)\r\n    ? buttonStyle\r\n    : STYLES[0];\r\n//If the button has a size, use buttonSize, if not then use the first size in the SIZE array \r\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\r\n\r\n  return (\r\n      //Here it will almost always return primary and medium unless it is overriden\r\n    <Link to='/login' className='btn-mobile'>\r\n      <button\r\n        className={`btn ${checkButtonStyle} ${checkButtonSize}`}\r\n        onClick={onClick}\r\n        type={type}\r\n      >\r\n        {children}\r\n      </button>\r\n    </Link>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}