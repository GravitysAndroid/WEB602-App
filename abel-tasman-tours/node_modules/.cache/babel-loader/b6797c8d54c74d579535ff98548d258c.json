{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Year2\\\\WEB\\\\Temp\\\\abel-tasman-tours\\\\src\\\\components\\\\Contact\\\\ContactForm.js\";\nimport React from 'react';\nimport Content from '../Content';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './ContactForm.css'; //Sets up a data store that uses state to define the data and allow them to see what they are typing\n\nclass ContactForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        disabled: true\n      });\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      message: '',\n      disabled: false,\n      emailSent: null\n    };\n  } //If the type of the input is a checkbox then it will equal checked, if not it will just equal the value typed in\n\n\n  //Renders out the actual form and what it contains\n  render() {\n    return /*#__PURE__*/React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"label\",\n      htmlFor: \"full-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, \"Full Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"control\",\n      id: \"full-name\",\n      name: \"name\",\n      type: \"text\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"label\",\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"control\",\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"label\",\n      htmlFor: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, \"Message\"), /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"control-message\",\n      id: \"message\",\n      name: \"message\",\n      as: \"textarea\",\n      row: \"4\",\n      value: this.state.message,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"button\",\n      variant: \"dark\",\n      type: \"submit\",\n      disabled: this.state.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, \"Send\"), this.state.emailSent === true && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"d-inline success-msg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 55\n      }\n    }, \"Email Sent\"), this.state.emailSent === false && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"d-inline error-msg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 56\n      }\n    }, \"Email Not Sent\"))) //If the form submitts then it will show a success message\n    //If the form fails to submit then it will show an error message\n    ;\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["C:/Workspace/Year2/WEB/Temp/abel-tasman-tours/src/components/Contact/ContactForm.js"],"names":["React","Content","Form","Button","ContactForm","Component","constructor","props","handleChange","event","target","value","type","checked","name","setState","handleSubmit","preventDefault","disabled","state","email","message","emailSent","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Content from '../Content'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport './ContactForm.css'\r\n\r\n//Sets up a data store that uses state to define the data and allow them to see what they are typing\r\nclass ContactForm extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            message: '',\r\n            disabled: false,\r\n            emailSent: null\r\n        }\r\n    }\r\n\r\n    //If the type of the input is a checkbox then it will equal checked, if not it will just equal the value typed in\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    //Prevent default stops the submit from just refreshing the page\r\n    //State set to disabled means that the user can't use the button to submit over and over\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            disabled: true,\r\n        })\r\n    }\r\n\r\n    //Renders out the actual form and what it contains\r\n    render(){\r\n        return(\r\n            <Content>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group className='form-group'>\r\n                        <Form.Label className='label' htmlFor=\"full-name\">Full Name</Form.Label>\r\n                        <Form.Control className='control' id='full-name' name='name' type='text' value={this.state.name} onChange={this.handleChange}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className='form-group'>\r\n                        <Form.Label className='label' htmlFor=\"email\">Email</Form.Label>\r\n                        <Form.Control className='control' id='email' name='email' type='email' value={this.state.email} onChange={this.handleChange}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className='form-group'>\r\n                        <Form.Label className='label' htmlFor=\"message\">Message</Form.Label>\r\n                        <Form.Control className='control-message' id='message' name='message' as='textarea' row='4' value={this.state.message} onChange={this.handleChange}/>\r\n                    </Form.Group>\r\n\r\n                    <Button className=\"button\" variant='dark' type='submit' disabled={this.state.disabled}>\r\n                        Send\r\n                    </Button>\r\n\r\n                    {this.state.emailSent === true && <p className='d-inline success-msg'>Email Sent</p>}\r\n                    {this.state.emailSent === false && <p className='d-inline error-msg'>Email Not Sent</p>}\r\n                </Form>\r\n            </Content>\r\n            //If the form submitts then it will show a success message\r\n            //If the form fails to submit then it will show an error message\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactForm"]},"metadata":{},"sourceType":"module"}